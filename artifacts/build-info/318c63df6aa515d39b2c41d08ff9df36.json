{
	"id": "318c63df6aa515d39b2c41d08ff9df36",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Own code/IfElse.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.2;\n\ncontract Conditional{\n    uint public a=10;\n    uint public b=20;\n     \n     function get() public view  returns(uint){\n             if(a>b){\n                 return 1;\n             }\n             else if(a==20){\n                 return 2;\n             }\n             else {\n                 return 3;\n             }\n     }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Own code/IfElse.sol": {
				"Conditional": {
					"abi": [
						{
							"inputs": [],
							"name": "a",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Own code/IfElse.sol\":62:388  contract Conditional{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Own code/IfElse.sol\":102:104  10 */\n  0x0a\n    /* \"contracts/Own code/IfElse.sol\":88:104  uint public a=10 */\n  0x00\n  sstore\n    /* \"contracts/Own code/IfElse.sol\":124:126  20 */\n  0x14\n    /* \"contracts/Own code/IfElse.sol\":110:126  uint public b=20 */\n  0x01\n  sstore\n    /* \"contracts/Own code/IfElse.sol\":62:388  contract Conditional{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Own code/IfElse.sol\":62:388  contract Conditional{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0dbe671f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4df7e3d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Own code/IfElse.sol\":88:104  uint public a=10 */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Own code/IfElse.sol\":110:126  uint public b=20 */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Own code/IfElse.sol\":139:385  function get() public view  returns(uint){... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Own code/IfElse.sol\":88:104  uint public a=10 */\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Own code/IfElse.sol\":110:126  uint public b=20 */\n    tag_11:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Own code/IfElse.sol\":139:385  function get() public view  returns(uint){... */\n    tag_14:\n        /* \"contracts/Own code/IfElse.sol\":175:179  uint */\n      0x00\n        /* \"contracts/Own code/IfElse.sol\":200:201  b */\n      sload(0x01)\n        /* \"contracts/Own code/IfElse.sol\":198:199  a */\n      sload(0x00)\n        /* \"contracts/Own code/IfElse.sol\":198:201  a>b */\n      gt\n        /* \"contracts/Own code/IfElse.sol\":195:378  if(a>b){... */\n      iszero\n      tag_17\n      jumpi\n        /* \"contracts/Own code/IfElse.sol\":228:229  1 */\n      0x01\n        /* \"contracts/Own code/IfElse.sol\":221:229  return 1 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"contracts/Own code/IfElse.sol\":195:378  if(a>b){... */\n    tag_17:\n        /* \"contracts/Own code/IfElse.sol\":270:272  20 */\n      0x14\n        /* \"contracts/Own code/IfElse.sol\":267:268  a */\n      sload(0x00)\n        /* \"contracts/Own code/IfElse.sol\":267:272  a==20 */\n      sub\n        /* \"contracts/Own code/IfElse.sol\":264:378  if(a==20){... */\n      tag_19\n      jumpi\n        /* \"contracts/Own code/IfElse.sol\":299:300  2 */\n      0x02\n        /* \"contracts/Own code/IfElse.sol\":292:300  return 2 */\n      swap1\n      pop\n      jump(tag_16)\n        /* \"contracts/Own code/IfElse.sol\":264:378  if(a==20){... */\n    tag_19:\n        /* \"contracts/Own code/IfElse.sol\":361:362  3 */\n      0x03\n        /* \"contracts/Own code/IfElse.sol\":354:362  return 3 */\n      swap1\n      pop\n        /* \"contracts/Own code/IfElse.sol\":139:385  function get() public view  returns(uint){... */\n    tag_16:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_21:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_22:\n        /* \"#utility.yul\":177:201   */\n      tag_26\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_21\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_28\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a041635d47038e1e6b2f7fedd71b7b54c0d475435454ed4084fe13d998d381564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a600055601460015534801561001a57600080fd5b5061012f8061002a6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f1460415780634df7e3d014605b5780636d4ce63c146075575b600080fd5b6047608f565b6040516052919060e0565b60405180910390f35b60616095565b604051606c919060e0565b60405180910390f35b607b609b565b6040516086919060e0565b60405180910390f35b60005481565b60015481565b6000600154600054111560b0576001905060c6565b60146000540360c1576002905060c6565b600390505b90565b6000819050919050565b60da8160c9565b82525050565b600060208201905060f3600083018460d3565b9291505056fea26469706673582212202a041635d47038e1e6b2f7fedd71b7b54c0d475435454ed4084fe13d998d381564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x0 SSTORE PUSH1 0x14 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0x95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6C SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x86 SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT ISZERO PUSH1 0xB0 JUMPI PUSH1 0x1 SWAP1 POP PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SLOAD SUB PUSH1 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xDA DUP2 PUSH1 0xC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A DIV AND CALLDATALOAD 0xD4 PUSH17 0x38E1E6B2F7FEDD71B7B54C0D475435454E 0xD4 ADDMOD 0x4F 0xE1 RETURNDATASIZE SWAP10 DUP14 CODESIZE ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62:326:0:-:0;;;102:2;88:16;;124:2;110:16;;62:326;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@a_4": {
									"entryPoint": 143,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@b_7": {
									"entryPoint": 149,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_30": {
									"entryPoint": 155,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f1460415780634df7e3d014605b5780636d4ce63c146075575b600080fd5b6047608f565b6040516052919060e0565b60405180910390f35b60616095565b604051606c919060e0565b60405180910390f35b607b609b565b6040516086919060e0565b60405180910390f35b60005481565b60015481565b6000600154600054111560b0576001905060c6565b60146000540360c1576002905060c6565b600390505b90565b6000819050919050565b60da8160c9565b82525050565b600060208201905060f3600083018460d3565b9291505056fea26469706673582212202a041635d47038e1e6b2f7fedd71b7b54c0d475435454ed4084fe13d998d381564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0x95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6C SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x86 SWAP2 SWAP1 PUSH1 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT ISZERO PUSH1 0xB0 JUMPI PUSH1 0x1 SWAP1 POP PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SLOAD SUB PUSH1 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH1 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xDA DUP2 PUSH1 0xC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A DIV AND CALLDATALOAD 0xD4 PUSH17 0x38E1E6B2F7FEDD71B7B54C0D475435454E 0xD4 ADDMOD 0x4F 0xE1 RETURNDATASIZE SWAP10 DUP14 CODESIZE ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62:326:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;139:246;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;88:16;;;;:::o;110:::-;;;;:::o;139:246::-;175:4;200:1;;198;;:3;195:183;;;228:1;221:8;;;;195:183;270:2;267:1;;:5;264:114;;299:1;292:8;;;;264:114;361:1;354:8;;139:246;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "60600",
								"executionCost": "44323",
								"totalCost": "104923"
							},
							"external": {
								"a()": "2407",
								"b()": "2429",
								"get()": "6719"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 88,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 126,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 110,
									"end": 126,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 110,
									"end": 126,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 388,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a041635d47038e1e6b2f7fedd71b7b54c0d475435454ed4084fe13d998d381564736f6c63430008120033",
									".code": [
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "DBE671F"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 110,
											"end": 126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 110,
											"end": 126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 110,
											"end": 126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 195,
											"end": 378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 195,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 228,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 221,
											"end": 229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 270,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 264,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 299,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 264,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 361,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 354,
											"end": 362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Own code/IfElse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"a()": "0dbe671f",
							"b()": "4df7e3d0",
							"get()": "6d4ce63c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Own code/IfElse.sol\":\"Conditional\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Own code/IfElse.sol\":{\"keccak256\":\"0x2926d66dc7529d5661cd8b1ece852cd67eca4ce762065d0c3de5e2e3d1d048ec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70494f712e035e31776e865b37015955c7a912b87fba672c7eae4ff5feb2211\",\"dweb:/ipfs/QmUVb5pXAyPkt2Ses5KCzaEyvoAxrmuQUWHMXje1vNe35q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Own code/IfElse.sol:Conditional",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Own code/IfElse.sol:Conditional",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Own code/IfElse.sol": {
				"ast": {
					"absolutePath": "contracts/Own code/IfElse.sol",
					"exportedSymbols": {
						"Conditional": [
							31
						]
					},
					"id": 32,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Conditional",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "Conditional",
							"nameLocation": "71:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dbe671f",
									"id": 4,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "100:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "88:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "88:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "102:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 7,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "122:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "110:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "110:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "124:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "180:205:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "198:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "198:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 18,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "267:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3230",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "270:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 26,
														"nodeType": "Block",
														"src": "335:43:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "361:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 11,
																"id": 25,
																"nodeType": "Return",
																"src": "354:8:0"
															}
														]
													},
													"id": 27,
													"nodeType": "IfStatement",
													"src": "264:114:0",
													"trueBody": {
														"id": 23,
														"nodeType": "Block",
														"src": "273:43:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 11,
																"id": 22,
																"nodeType": "Return",
																"src": "292:8:0"
															}
														]
													}
												},
												"id": 28,
												"nodeType": "IfStatement",
												"src": "195:183:0",
												"trueBody": {
													"id": 17,
													"nodeType": "Block",
													"src": "202:43:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 11,
															"id": 16,
															"nodeType": "Return",
															"src": "221:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "148:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "151:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "175:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:6:0"
									},
									"scope": 31,
									"src": "139:246:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "62:326:0",
							"usedErrors": []
						}
					],
					"src": "36:352:0"
				},
				"id": 0
			}
		}
	}
}